// Generated by FUECCode.verilog_module
module fuec_decoder_12_4 (
    input  wire [11:0] r,
    output wire [3:0] s,
    output wire [11:0] r_fix,
    output wire        no_error,
    output wire        corrected,
    output wire        uncorrectable
);

    // Parity-check matrix rows HROWj (bit i true means r[i] participates in s[j])
    localparam [11:0] HROW0 = 12'b000110101010;
    localparam [11:0] HROW1 = 12'b001001110110;
    localparam [11:0] HROW2 = 12'b010001001111;
    localparam [11:0] HROW3 = 12'b100011111001;

    // Syndrome computation s[j] = ^(r & HROWj)
    assign s[0] = ^(r & HROW0);
    assign s[1] = ^(r & HROW1);
    assign s[2] = ^(r & HROW2);
    assign s[3] = ^(r & HROW3);

    // Selectors for correctable patterns (XNOR equality: &(s ^~ SVAL))
    localparam [3:0] SVAL_sel_e_2 = 4'b0110;  wire sel_e_2 = &(s ^~ SVAL_sel_e_2);  // e=(2,)
    localparam [3:0] SVAL_sel_e_1 = 4'b0111;  wire sel_e_1 = &(s ^~ SVAL_sel_e_1);  // e=(1,)
    localparam [3:0] SVAL_sel_e_7 = 4'b1001;  wire sel_e_7 = &(s ^~ SVAL_sel_e_7);  // e=(7,)
    localparam [3:0] SVAL_sel_e_4 = 4'b1010;  wire sel_e_4 = &(s ^~ SVAL_sel_e_4);  // e=(4,)
    localparam [3:0] SVAL_sel_e_5 = 4'b1011;  wire sel_e_5 = &(s ^~ SVAL_sel_e_5);  // e=(5,)
    localparam [3:0] SVAL_sel_e_0 = 4'b1100;  wire sel_e_0 = &(s ^~ SVAL_sel_e_0);  // e=(0,)
    localparam [3:0] SVAL_sel_e_3 = 4'b1101;  wire sel_e_3 = &(s ^~ SVAL_sel_e_3);  // e=(3,)
    localparam [3:0] SVAL_sel_e_6 = 4'b1110;  wire sel_e_6 = &(s ^~ SVAL_sel_e_6);  // e=(6,)

    // Flip signals per bit and corrected output
    wire flip_0 = sel_e_0;
    wire flip_1 = sel_e_1;
    wire flip_2 = sel_e_2;
    wire flip_3 = sel_e_3;
    wire flip_4 = sel_e_4;
    wire flip_5 = sel_e_5;
    wire flip_6 = sel_e_6;
    wire flip_7 = sel_e_7;
    wire flip_8 = 1'b0;
    wire flip_9 = 1'b0;
    wire flip_10 = 1'b0;
    wire flip_11 = 1'b0;
    assign r_fix[0] = r[0] ^ flip_0;
    assign r_fix[1] = r[1] ^ flip_1;
    assign r_fix[2] = r[2] ^ flip_2;
    assign r_fix[3] = r[3] ^ flip_3;
    assign r_fix[4] = r[4] ^ flip_4;
    assign r_fix[5] = r[5] ^ flip_5;
    assign r_fix[6] = r[6] ^ flip_6;
    assign r_fix[7] = r[7] ^ flip_7;
    assign r_fix[8] = r[8] ^ flip_8;
    assign r_fix[9] = r[9] ^ flip_9;
    assign r_fix[10] = r[10] ^ flip_10;
    assign r_fix[11] = r[11] ^ flip_11;

    // Status flags
    assign no_error = ~(|s);
    wire any_selector = sel_e_2 | sel_e_1 | sel_e_7 | sel_e_4 | sel_e_5 | sel_e_0 | sel_e_3 | sel_e_6;
    assign corrected = any_selector;
    assign uncorrectable = (|s) & ~any_selector;

endmodule